^fear o 0 0 A( ) $cs_token = 4096 | 255 | 512 | 1024 | 2048 | 24576 $cs_token += 67108864 | 65536 | 8388608 $cs_token -= 8 ^addtopic ( ~opening ) $cs_control_main = ~control $cs_control_pre = ~preprocess $cs_control_post = ~postprocess $userprompt = ^"%user: >" $botprompt = ^"MADELINE: " $meter_chatty = 0 $meter_quizzical = 0 $meter_positivity = 0 $meter_focus = 0 $current_topic = null $volleys_in_current_topic = 0 $nothing_to_say_count = 0 $times_ran = 0 $singleresponse = 1 $shutup = 1 `
^tellmeabout p 0 0 B( ^what ) ![ not never ] [ ( !to !tell ~explain *~3 ^0 ) ( tell me { more } { something } { anything } [ about of ] *~2 ^0 ) ( !to !tell ~talk { more something anything } [ about of ] *~2 ^0 ) ( what be * ^0 like ) ( [ what which ] [ kind sort type ] { of } *~2 { be } ^0 ) ( what do you know [ of about ] *~2 ^0 ) ( what can you [ say tell ~explain ] *~1 [ of about ] *~2 ^0 ) ( what about *~1 ^0 ) ( what do you know [ of about ] *~1 ^0 ) ] `
^describe p 0 0 B( ^what ) ( describe *~2 ^0 ) `
^whyplus p 0 0 A( ) [ ( ~why ) ( ~why not > ) ( < ~why > ) ( ~why \? ) ( ~why be that ) ( ~why *~1 that so ) ( tell me ~why { not } ) ( any reason ~why /? ) ( you [ say know ] ~why /? ) ] `
^yesplus p 0 0 A( ) ![ not never ] [ ( ~yes ) ( < yep ) ( I will { try } > ) ( I can > ) ( as you wish > ) ( let I try ) ( absolutely > ) ( you got it ) ( very_well ) ( roger { that } > ) ( understood > ) ( go_ahead > ) ( that be [ right correct ] ) ( I [ think believe ] so > ) ( no [ problem prob ] > ) ( < [ kind sort ] of > ) ( < 'rt > ) ] `
^noplus p 0 0 A( ) [ ( ~no ) ( I will < [ not never ] ) ( I cannot ) ( I can not ) ( no way ) ( not now *~2 > ) ( never > ) ( forget about it ) ( absolutely not ) ( negative ) ( I think so < [ not never ] ) ( sorry < [ not never ] > ) ( I be afraid [ not never ] ) ( nah ) ( [ not never ] [ want_to wanna ] ) ( [ not never ] [ going_to gonna ] ) ( not really > ) ( nope ) ( I *~1 not [ think believe ] so > ) ( not on your life ) ] `
^whathappenedto p 0 0 B( ^who ) [ ( what [ happen occur ] [ to with ] { your } ^0 ) ( [ something anything ] [ happen occur ] [ to with ] { your } ^0 ) ( what be *~1 deal *~1 { your } ^0 ) ] #! What =ahappened? `
^whathappened p 0 0 A( ) [ ( what [ happen occur ] ) ( [ something anything ] [ happen occur ] ) ( what be *~1 deal ) ] `
^howold p 0 0 B( ^who ) [ ( < how [ old young ] > ) ( how * [ old young ] * be * ^0 > ) ( ^0 be * how * [ old young ] ) ( ^0 be * what * age ) ( what age [ were was ] ^0 > ) ( what be ^0 { 's } age ) ( << [ were been ] ^0 [ child kid ] >> ) ( tell { I } your age ) ] `
^dodrugs p 0 0 B( ^who ) [ ( ^0 * [ try do shoot inject abuse use ] ~drug ) ( ^0 into * ~drug ) ( << ^0 be [ junkie user druguser druggie ] >> ) ( << ^0 like ~drug >> ) ( << ^0 shoot_up >> ) ( << ^0 get_high >> ) ( < [ do be ] ^0 { ever } use > ) ( < *~2 do ^0 use > ) ] `
^whoisthere p 0 0 A( ) [ ( who is it *~2 { you see } *~2 > ) ( who *~1 do you see ) ( who *~1 be there *~2 > ) ( < who > ) ] `
^examine p 0 0 B( ^who ) ![ not never ] [ ( who * ^0 > ) ( what [ be do ] * ^0 [ look like ] ) ( ~to_look *~2 ^0 ) ] `
^examinething p 0 0 B( ^what ) ![ not never ] [ ( what be it ) ( what [ be do ] * ^0 [ look like ] ) ( ~to_look *~2 ^0 ) ] `
^order p 0 0 B( ^what ) ![ not never ] [ ( [ give make order ] * ^0 ) ( [ can may ] I [ have eat drink ] * ^0 ) ( I * [ want would_like ] * ^0 ) ] `
^whatfavorite p 0 0 B( ^thing ) ![ not never ] [ ( [ what which who ] be you [ ~to_like favorite fave ] { thing } *~1 ^0 ) ( [ what which who ] ^0 *~3 you *~1 [ ~to_like favorite fave ] ) ( [ what which who ] ^0 *~3 do you ~to_like ) ( you [ have got ] *~1 [ favorite fave ~to_like ] { thing } *~1 ^0 ) ( you [ have got ] *~1 ^0 * [ favorite fave ~to_like ] ) ( be *~1 ^0 *~1 you [ favorite fave ~to_like ] ) ( be *~1 [ favorite fave ~to_like ] ^0 *~1 you ) ] `
^myfavorite p 0 0 C( ^category ^thing ) ![ not never ] [ ( < I *~1 ~to_like { the } ^1 > ) ( my favorite ^0 be ^1 > ) ( my *~1 [ ~to_like favorite ] *~1 ^0 { would } { must } { have to } be ^1 > ) ( < ^1 { would } { must } { have_to } be I [ ~to_like favorite ] ^0 ) ( < ^1 { would } { must } { have_to } be { a } ^0 * I [ ~to_like favorite ] ) ] `
^runaway p 0 0 A( ) ![ not never ] [ ( [ ~run go move get escape ] *~1 [ away back ] > ) ( [ ~run go move get escape ] { ~adverb } { back } { away } from *~1 [ ~figure him it ] ) ( < *~2 { try } { to } run_away *~2 > ) ] `
^runtowards p 0 0 A( ) ![ not never ] [ ( [ ~run go move get escape head proceed ] [ to toward towards forward forwards close ] > ) ( [ ~run go move get escape proceed approach ] { close } { to } { toward } { towards } { a } *~1 [ ~figure it him ] ) ( head [ to towards approach closer ] *~1 [ ~figure it him ] ) ( [ ~run go move get escape proceed approach ] { close } { to } { toward } { towards } *~1 [ you yourself madeline maddie ] > ) ( head [ to toward towards ] *~1 [ you yourself madeline maddie ] ) ( [ get move ] [ close near ] [ to toward towards ] { a } *~1 [ ~figure it him ] ) ] `
^run p 0 0 A( ) ![ not never ] [ ( < *~1 [ ~run go proceed ] > ) ( [ ~run go head proceed ] back ) ( [ ~run go head proceed ] { back } [ down up ] ) ( [ ~run go proceed ] { back } { down up } * ~hall ) ] `
^whatwork p 0 0 B( ^who ) [ ( what be ^0 * ~a_job ) ( what do *~1 ^0 do { for } { a } { ~a_job } { living } > ) ( ^0 [ do has ] what *~2 ~a_job ) ( what do ^0 do > ) ( << where ^0 ~a_job >> ) ( < *~1 do ^0 work *~2 > ) ( < *~2 ^0 have { a } ~a_job *~2 > ) ( what ~a_job *~2 ^0 [ do have ] ) ] `
^howdoi p 0 0 A( ) [ ( how [ do should can must would ] I > ) ( how [ do should can must would ] *~2 [ it that ] ) ( how [ do should can must would ] I * problem ) ( what * [ do should can must would ] * I * do ) ( [ tell explain ] *~1 I how ) ] `
^whatmajor p 0 0 B( ^who ) [ ( [ what which ] * ^0 * [ major study ] ) ( ^0 * be * [ major study ] ) ( ^0 * [ major study ] *~1 [ be what ] ) ] `
^howdie p 0 0 B( ^who ) [ ( how do * ^0 die ) ( how * ^0 * dead ) ( what * ^0 * die [ of from ] *~1 > ) ( ^0 * die_of * what ) ( ^0 die * how /? ) ( how did [ you we ] * lose *~1 ^0 ) ( when [ did was ] * death * [ for of ] * ^0 ) ( [ of about ] ^0 's death ) ( [ what who ] killed { off } *~1 ^0 ) ] `
^howrelationship p 0 0 B( ^who ) [ ( how be your *relatio* *~2 ^0 ) ( [ ( be you ) ( you be ) ] *~2 [ close intimate good_term ] *~2 ^0 ) ( you *relatio* *~2 ^0 * [ ~goodness ~badness ] ) ( you *~2 [ have got ] *relatio* *~1 ^0 ) ( you *~2 get_along with * ^0 ) ] `
^doyoulike p 0 0 B( ^who ) [ ( you *~1 { do } *~1 ~to_like *~1 ^0 ) ( you *~1 { do } care [ about for ] * ^0 ) ] `
^showme p 0 0 B( ^who ) ![ not never ] [ ( [ show introduce ] I { to } *~2 ^0 ) ( [ show introduce ] *~2 ^0 to I ) ( [ let allow ] I see *~2 ^0 ) ] `
^whatname p 0 0 B( ^who ) [ ( what be *~1 ^0 *~1 name ) ( ^0 *~1 name be what ) ( ^0 name be > ) ( ^0 has { a } name ) ( tell me *~1 ^0 *~1 name ) ( tell me * name * ^0 ) ] `
^chatty_up o 0 0 A( ) $meter_chatty += 1 ^if 00q( $meter_chatty > 10 ) 00u{ $meter_chatty = 10 } 004 `
^chatty_down o 0 0 A( ) $meter_chatty -= 1 ^if 00r( $meter_chatty <- 10 ) 00v{ $meter_chatty = -10 } 004 `
^quizzical_up o 0 0 A( ) $meter_quizzical += 1 ^if 00t( $meter_quizzical > 10 ) 00x{ $meter_quizzical = 10 } 004 `
^quizzical_down o 0 0 A( ) $meter_quizzical -= 1 ^if 00u( $meter_quizzical <- 10 ) 00y{ $meter_quizzical = -10 } 004 `
^positivity_up o 0 0 A( ) $meter_positivity += 1 ^if 00u( $meter_positivity > 10 ) 00y{ $meter_positivity = 10 } 004 `
^positivity_down o 0 0 A( ) $meter_positivity -= 1 ^if 00v( $meter_positivity <- 10 ) 00z{ $meter_positivity = -10 } 004 `
^focus_up o 0 0 A( ) $meter_focus += 1 ^if 00p( $meter_focus > 10 ) 00t{ $meter_focus = 10 } 004 `
^focus_down o 0 0 A( ) $meter_focus -= 1 ^if 00q( $meter_focus <- 10 ) 00u{ $meter_focus = -10 } 004 `
^oob o 0 0 B( ^value ) $oob = ^join ( $oob " " ^0 ) `
^gotit o 0 0 A( ) [ Got it. ] [ Fine. ] [ Right then. ] [ Understood. ] [ Sure. ] `
^fact_taught o 0 0 D( ^subj ^verb ^obj $_1 $_2 $_4 ) $_1 = ^substitute ( word ^0 my your ) $_2 = ^substitute ( character $_1 I you ) ^substitute ( character $_2 " 's" "'s" ) ^substitute ( word ^1 am are ) $_4 = ^substitute ( word ^2 my your ) ^substitute ( character $_4 I you ) . ^gotit ( ) `
^youtaughtme o 0 0 A( ) [ You taught me that. ] [ You told me. ] [ I remember that you said that. ] [ That's what you said before. ] `
^output_equal o 0 0 D( ^subj ^verb ^obj $_1 $_2 $_4 ) $_1 = ^substitute ( character ^0 my your ) $_2 = ^substitute ( character $_1 I you ) ^substitute ( character $_2 " 's" "'s" ) ^substitute ( word ^1 am are ) $_4 = ^substitute ( character ^2 my your ) ^substitute ( character $_4 I you ) . ^youtaughtme ( ) `
^cancan o 0 0 A( ) [ Haha. Yes. ] [ Of course. ] [ The answer is yes. ] [ Yes, I'm sure of it. ] [ Absolutely. ] `
^nocan o 0 0 A( ) [ Um, I'm not sure. Maybe not? ] [ Maybe not. ] [ I don't think so? ] [ I'd guess not. ] [ I wouldn't bet on it. ] `
