^mmg o 0 0 A( ) $cs_token = 255 | 512 | 1024 | 2048 | 24576 $cs_token += 67108864 | 65536 | 8388608 $cs_token -= 8 $cs_token |= 64 ^addtopic ( ~opening ) $cs_control_main = ~control $cs_control_pre = ~preprocess $cs_control_post = ~postprocess $userprompt = ^"%user: >" $botprompt = ^"?: " $cs_wildcardseparator = _ $meter_chatty = 0 $meter_quizzical = 0 $meter_positivity = 0 $meter_focus = 0 $current_topic = null $volleys_in_current_topic = 0 $rom_level = 0 $rom_pts = 0 $rom_next = 10 $mood = 0 $singleresponse = 1 $shutup = 1 `
^tellmeabout p 0 0 B( ^thing ) ( ![ not ] [ ( < { ~cheree } { , } { ~can } { you } { please } ~explain *~3 ^0 !'s ) ( < { ~cheree } { , } { ~can } { you } { please } tell me { more } { something } { anything } [ about of ] *~2 ^0 !'s ) ( < { ~cheree } { , } { ~can } { you } { please } ~to_talk { more something anything } [ about of ] *~2 ^0 !'s ) ( [ what which ] [ kind sort type ] { of } *~2 { be } ^0 !'s ) ( < { ~cheree } { , } what do you [ know think ] [ of about ] *~2 ^0 !'s ) ( < { ~cheree } { , } what can you [ say tell ~explain ] *~1 [ of about ] *~2 ^0 !'s ) ( < { ~cheree } { , } { ~can } { you } { please } describe *~2 ^0 !'s ) ( < { ~cheree } { , } what do you know [ of about ] *~1 ^0 !'s ) ( [ how what ] be *~1 ^0 like ) ( !~mellen < * [ how what ] be *~1 ^0 > ) ( [ how what ] [ does do ] * ^0 ~seem ) ( ~to_look *~1 ^0 !'s ) ( < { and } { what } { of } { about } *~1 ^0 > ) ( !~mellen < *~1 { you } { try } { to } ~explain *~3 ^0 !'s ) ( !~mellen < * tell me { more } { something } { anything } [ about of ] *~2 ^0 !'s ) ( !~mellen < * !to ~to_talk { more something anything } [ about of ] *~2 ^0 !'s ) ( !~mellen < * what do you [ know think ] [ of about ] *~2 ^0 !'s ) ( !~mellen < * what can you [ say tell ~explain ] *~1 [ of about ] *~2 ^0 !'s ) ( !~mellen < * describe *~2 ^0 !'s ) ( !~mellen < * what do you know [ of about ] *~1 ^0 !'s ) ( !~mellen < * do you know { more } [ of about ] *~1 ^0 !'s ) ( I be *~2 curious [ about of ] *~1 ^0 ) ( I [ ~to_want ] { to } know { more } about *~1 ^0 !'s ) ( !~mellen < * tell me *~2 memory [ of about ] *~1 ^0 !'s ) ( !~mellen < * ~which be *~2 memory [ of about ] *~1 ^0 !'s ) ( what be *~1 ^0 's story ) ( what be { a } story [ about of ] ^0 !'s ) ( what { else } { other } { thing } [ should must ] I know [ of about ] *~1 ^0 !'s ) ] ) `
^whatabout p 0 0 B( ^thing ) [ ( < what { now } about *~1 ^0 { now } > ) ( say ~anything about *~1 ^0 { now } > ) ( < what of *~1 ^0 > ) ( let us ~to_talk [ of about ] *~1 ^0 ) ( ^0 [ huh eh ] > ) ( < { ~can } { 'you } { try } { to } think about *~1 ^0 > ) ( < { ~can } { 'you } { try } { to } [ remember recall ] { about } *~1 ^0 > ) ( < how about *~1 ^0 > ) ( memory [ about of ] *~1 ^0 ) ( what { exactly } be { so } special about *~1 ^0 ) ] `
^why p 0 0 A( ) [ ( ~why *~3 > ) ( ~why not > ) ( < { but } ~why > ) ( ~why \? ) ( ~why be that ) ( ~why *~1 that so ) ( tell me ~why { not } ) ( any reason ~why /? ) ( you [ say know ] ~why /? ) ( < which be ~why > ) ( < because *~1 > ) ( < why { be } *~1 , *~3 > ) ( < for what > ) ] `
^who p 0 0 A( ) [ ( < { then } who { now } > ) ( < { but } who > ) ( < who the { hell } { heck } { fuck } > ) ( who be ~pronoun > ) ( tell me who { it } { be } > ) ( < which be who > ) ( < [ like such_as ] who > ) ( !I < who { be } *~1 , *~3 > ) ( < *~1 who [ does do ] { ~pronoun } > ) ( < *~1 who [ would ~can ] *~1 be *~1 > ) ( < { ~can } { you } ~explain { to } { I } who ) ] `
^what p 0 0 A( ) [ ( < { then } { about } what { now } > ) ( < { but } who > ) ( < what the { hell } { heck } { fuck } > ) ( what be [ it this that ] > ) ( tell me { about } what { it } { be } > ) ( < which be what > ) ( < [ like such_as ] what > ) ( < what { be } *~1 , *~3 > ) ( what { do } { ~can } you mean ) ( ~emomisunderstand ) ( < what > ) ( < huh *~1 > ) ( < come again > ) ] `
^where p 0 0 A( ) [ ( < { then } { about } where > ) ( < { but } where > ) ( < where the { hell } { heck } { fuck } > ) ( where be ~pronoun > ) ( tell me { about } where { it } { be } > ) ( < which be where > ) ( < [ like such_as ] where > ) ( < where { be } *~1 , *~3 > ) ] `
^when p 0 0 A( ) [ ( < { then } { about } when > ) ( < { but } when > ) ( < when the { hell } { heck } { fuck } > ) ( when be [ it this that ] > ) ( tell me { about } when { it } { be } > ) ( when will [ it this that ] be > ) ( < which be when > ) ( < [ like such_as ] when > ) ( < when { be } *~1 , *~3 > ) ] `
^how p 0 0 A( ) [ ( < *~1 how > ) ( < { but } how > ) ( how be ~pronoun > ) ( how *~1 that so ) ( < how the { hell } { heck } { fuck } > ) ( tell me how { not } ) ( you [ say know ] how /? ) ( < which be how > ) ( < [ like such_as ] how > ) ( < how { be } *~1 , *~3 > ) ] `
^yes p 0 0 A( ) ( ![ not never ] [ ( < [ ok okay ] > ) ( ~yes { , } { girl } { babe } { madam } { sir } > ) ( < yep ) ( I will { try } > ) ( I can > ) ( as you wish > ) ( let I try ) ( absolutely > ) ( you got [ it something ] ) ( very well ) ( roger { that } > ) ( understood > ) ( go ahead > ) ( that be [ right correct ] ) ( I [ think believe ] so > ) ( no [ problem prob sweat ] > ) ( < [ kind sort ] of > ) ( < 'rt > ) ( < y > ) ( yes { , } *~1 > ) ( [ yes yeah ] I know *~1 > ) ( < once or twice > ) ( I do > ) ( < please { do } { it } { that } { so } > ) ( < { please } do { it } { that } { so } > ) ( !not < *~1 of course *~4 > ) ( < { only } if [ you we I ] [ must have_to ] > ) ( < all right *~1 > ) ( < *~1 { , } why not *~1 > ) ( < { ~yes } { , } go for [ it something ] > ) ( < do [ it something ] > ) ( < fine { then } > ) ( < *~1 ~yes { , } sure > ) ( ~yesanswer { , } [ ~yesanswer ok fine ] ) ( [ ~yesanswer ok fine ] { , } ~yesanswer ) ( < ~yesanswer *~1 be { so } { true } > ) ( < fire { ahead } > ) ( < ~yesanswer { , } thank you > ) ( < ~yesanswer { , } thanks > ) ( < well { , } ~yesanswer > ) ( < sure thing ) ( !not I would be happy ) ( < *~1 { , } gladly > ) ( < *~1 I { do } { ~can } agree ) ( < { I } { do } not disagree ) ( hit me { up } { with } { something } { it } > ) ( I ~can try { to } > ) ( < *~2 I bet > ) ( < *~1 { it } { that } { something } makes { a_lot_of } sense > ) ( < *~1 { it } { that } { something } sounds [ sensible ~goodness right ] > ) ( !not < *~1 { it } { that } { something } would be { ~adverb } [ spiffy ~goodness ] > ) ( < { ~yesanswer } { , } { it } { that } { something } is > ) ( I think I [ have do be ] > ) ( of course { ~pronoun } *~1 > ) ( I would ~to_like [ to that this it something ] ) ] ) `
^no p 0 0 A( ) [ ( not at all ) ( ~no ![ problem prob sweat ] ) ( I will < [ not never ] ) ( I { sure } cannot ) ( I { sure } can not ) ( no way ) ( not now *~2 > ) ( never > ) ( forget about it ) ( absolutely not ) ( negative ) ( I think so < [ not never ] ) ( sorry < [ not never ] > ) ( I be afraid [ not never ] ) ( nah ) ( [ not never ] [ want_to wanna ] ) ( [ not never ] [ going_to gonna ] ) ( not really > ) ( [ nope nopes ] ) ( I *~1 not [ think believe ] so > ) ( not on your life ) ( probably not > ) ( < n > ) ( ![ problem prob sweat ] no *~1 > ) ( I do not > ) ( < not { yet } > ) ( not < *~1 of course *~4 > ) ( no { , } thanks > ) ( no { , } thank you ) ( < must [ we I ] > ) ( < do [ we I ] have to > ) ( well { , } ~noanswer ) ( < maybe later > ) ( < *~3 not { at } { all } possible > ) ( not { ~any } chance ) ( < *~1 I { ~can } disagree ) ( < { I } { do } not agree ) ( < { I } would not { do } { it } { that } { this } { something } > ) ( not { right } { just } now ) ] `
^dunno p 0 0 A( ) [ ( ~dunno ) ( ~emomaybe ) ( < { I } { be } not sure > ) ( < maybe { not } > ) ( < { I } [ guess suppose ] *~2 > ) ( < *~1 [ could might may ] { not } be { so } { true } > ) ( < *~1 { it } depends > ) ( < do not ask me > ) ( !not < *~2 be { so } possible > ) ( I forget { ~why } > ) ( < { I } { be } { still } { yet } [ undecided unsure uncertain not_sure ] ) ] `
^example p 0 0 A( ) [ ( for example > ) ( < *~3 { a } example > ) ( for instance { what } > ) ( such as { what } > ) ( like_what ) ( for_example ) ] `
^and p 0 0 A( ) [ ( ~more ) ( what *~1 next > ) ( and then { what } { happen } > ) ( and what happen *~1 > ) ( < *~1 then { what } { happen } > ) ( what happen { next } { then } > ) ( what happen { next } *after* ) ( tell me { more } { please } > ) ( < *~1 go [ on ahead ] { then } > ) ( < but *~1 > ) ( ![ not never ] < I [ be will ] *~1 listen ) ( tell me { more } { about } what *~1 [ be mean ] > ) ( how did [ something it ] go > ) ( what did [ they 'you ] *~1 do *~3 > ) ( what be the story ) ( ~explain { to } { I } the story ) ( tell { me } more { of } { about } { it } { something } > ) ( < z > ) ( < *~1 { , } { please } [ continue go_on ] > ) ( < be [ something that ] all > ) ( < [ something that ] be all > ) ] `
^explain p 0 0 A( ) [ ( what [ kind sort ] { of } *~3 > ) ( tell { I } [ more about what ] ) ( ~more ) ] `
^whatfavorite p 0 0 B( ^thing ) ( ![ not never ] [ ( [ ~which who ] be you [ ~to_like favorite fave ] { thing } *~1 ^0 ) ( [ ~which who ] ^0 *~3 you *~1 [ ~to_like favorite fave ] ) ( [ ~which who ] ^0 *~3 do you ~to_like ) ( you [ have got ] *~1 [ favorite fave ~to_like ] { thing } *~1 ^0 ) ( you [ have got ] *~1 ^0 * [ favorite fave ~to_like ] ) ( be *~1 ^0 *~1 you [ favorite fave ~to_like ] ) ( be *~1 [ favorite fave ~to_like ] ^0 *~1 you ) ( ~explain *~2 your taste in ^0 ) ( what be *~1 your taste in ^0 ) ( < *~3 you *~1 { ~any } taste in ^0 > ) ( you { do } [ remember recall ] *~1 your [ favorite fave ] *~1 ^0 ) ] ) `
^whatis p 0 0 B( ^thing ) ( ![ not ] [ ( < { a } ^0 > ? ) ( what be { a } ^0 ) ( define *~2 ^0 ) ( what * ^0 mean ) ( meaning of { a } ^0 ) ( ~explain what { a } ^0 be ) ( what [ does do be ] *~1 mean [ to by ] { say } ^0 ) ( ^0 [ be mean ] what *~1 > ) ( < *~2 ^0 { , } what [ be does do ] *~1 { mean } > ) ( what do you [ think believe imagine ] { ~any } ^0 [ be mean ] > ) ( what could { ~any } ^0 [ be mean ] > ) ] ) `
^whatsitlike p 0 0 B( ^thing ) [ ( [ what how ] { is } *~1 like * ^0 ) ( you ~to_like * ^0 ) ( be * fun * ^0 ) ( [ what how ] be ^0 like > ) ] `
^isreal p 0 0 B( ^thing ) [ ( be { a } ^0 *~1 real *~2 > ) ( [ does do ] { a } ^0 *~1 exist *~2 > ) ( ^0 be *~1 real *~2 > ) ( ^0 *~2 exist *~2 > ) ( you believe in { a } *~2 ^0 *~1 > ) ] `
^haveyoueverdone p 0 0 B( ^thing ) [ ( [ have did ] you { ever } [ do conduct hold use ] { ~any } *~1 ^0 ) ( you [ have did ] { ever } [ do conduct hold use ] { ~any } *~1 ^0 ) ( [ have did ] ^0 { ever } happen to you ) ( < *~1 do you { ever } ^0 ) ( you { have } { ever } [ see witness ] { ~any } *~1 ^0 ) ] `
^canyoudo p 0 0 B( ^thing ) [ ( ~can you { ever } { do } { conduct } { hold } { use } { ~any } *~1 ^0 ) ( you ~can { ever } { do } { conduct } { hold } { use } { ~any } *~1 ^0 ) ( [ ( be you ) ( you be ) ] able to { do } { conduct } { hold } { ~any } *~1 ^0 ) ] `
^youhave p 0 0 B( ^thing ) [ ( < *~1 { have } you { ever } [ have own carry possess got keep ] { ~any } *~1 ^0 ) ( you [ have do ] { ever } [ have own carry possess got keep ] { ~any } *~1 ^0 ) ( < *~1 do you { ever } have { ~any } *~1 ^0 ) ] `
^youwant p 0 0 B( ^thing ) [ ( < *~1 { have } { do } you { ever } ~to_want { ~any } *~1 ^0 ) ( < *~1 { do } you { have } { do } { ever } ~to_want { ~any } *~1 ^0 ) ( you *~1 ~to_want { ~any } *~1 ^0 ) ] `
^isscary p 0 0 B( ^thing ) [ ( ^0 * be * ~scary ) ( be { a } ^0 * ~scary ) ( 'you be *~1 ~to_scare * ^0 ) ( be 'you *~1 ~to_scare * ^0 ) ] `
^isdangerous p 0 0 B( ^thing ) [ ( ^0 * be *~2 ~lethality_words ) ( be { a } ^0 * ~lethality_words ) ] `
^whenis p 0 0 B( ^event ) [ ( < *~1 when [ be does do ] { a } *~1 ^0 ) ( ^0 [ be happen occur ] when > ) ] `
^whatremember p 0 0 B( ^thing ) [ ( what { do } you ~remember [ of about ] *~1 ^0 ) ( [ can do ] you ~remember { anything } { something } [ of about ] *~1 ^0 ) ] `
^iloveyou p 0 0 A( ) ( ![ not never ] [ ( I { do } love 'you ) ( I be in { so } love with 'you ) ( I { be } { so } *~1 crazy about 'you ) ( { do } ~to_like 'you [ much a_lot ] ) ( I { have } fallen [ for in_love_with ] you ) ( < love 'you *~2 > ) ] ) `
^showme p 0 0 B( ^whois ) ![ not never ] [ ( [ show introduce ] I { to } *~2 ^0 ) ( [ show introduce ] *~2 ^0 to I ) ( [ let allow ] I see *~2 ^0 ) ] `
^manifest p 0 0 B( ^whois ) [ ( you { ~can } [ manifest conjure summon ] { I } *~1 ^0 > ) ( you { ~can } [ manifest conjure summon ] * [ ghost spirit devil ] of *~1 ^0 ) ( you { ~can } [ manifest conjure summon ] * ^0 's [ ghost spirit devil ] ) ( < { try } { to } [ manifest conjure summon ] * ^0 *~3 { ghost } { spirit } { devil } > ) ] `
^do p 0 0 B( ^thing ) [ ( < { can } { you } { ~can } { try } { to } ^0 { for } { me } { again } { one more time } > ) ( < { try } { to } { do } { ~any } { another } ^0 { for } { me } { again } { some } { more } > ) ] `
^trivia_in_context p 0 0 A( ) ( !^incontext ( ~location21.trivia_21 ) !^incontext ( ~location19.trivia_19 ) !^incontext ( ~location05.trivia_05 ) !^incontext ( ~location15.trivia_15 ) !^incontext ( ~location16.trivia_16 ) !^incontext ( ~location23.trivia_23 ) !^incontext ( ~location07.trivia_07 ) !^incontext ( ~location12.trivia_12 ) !^incontext ( ~location18.trivia_18 ) !^incontext ( ~location28.trivia_28 ) !^incontext ( ~location29.trivia_29 ) !^incontext ( ~location30.trivia_30 ) !^incontext ( ~location45.trivia_45 ) !^incontext ( ~location49.trivia_49 ) !^incontext ( ~location37.trivia_37 ) !^incontext ( ~location40.trivia_40 ) !^incontext ( ~location42.trivia_42 ) !^incontext ( ~location49.trivia_49 ) !^incontext ( ~location50.trivia_50 ) !^incontext ( ~location53.trivia_53 ) !^incontext ( ~location54.trivia_54 ) !^incontext ( ~location39.trivia_39 ) ) `
^whereis p 0 0 B( ^place ) [ ( what be { a } ^0 > ) ( where be { a } ^0 ) ( ^0 be where *~1 > ) ( where * ^0 * *locat* ) ( [ what where ] * location * ^0 ) ( how [ does do ] [ you I one ] get { to } { a } ^0 ) ( what be { a } *locat* [ of for where ] ^0 ) ( ~explain { I } where { a } ^0 be ) ( location * ^0 * [ what where ] ) ( where be there { ~any } ^0 ) ( where [ be ~can ] *~1 ^0 be found ) ( where [ be does do ] *~1 ^0 [ live~v reside ] ) ] `
^whyknowwhere p 0 0 B( ^place ) [ ( [ ~why how ] { do } 'you know *~1 { a } ^0 ) ( you know *~1 { a } ^0 [ ~why how ] ) ( how did 'you [ find locate ] *~1 { a } ^0 ) ( you were able to [ find locate ] *~1 { a } ^0 ) ] `
^havebeen p 0 0 B( ^place ) [ ( have you { ever } been { to } *~1 ^0 ) ( you have { ever } been { to } *~1 ^0 ) ( how many time * you * [ at to ] *~1 ^0 ) ( you { have } been { to } *~1 ^0 [ ~much ~frequency_adverbs ] ) ( you come { to } *~1 ^0 [ ~much ~frequency_adverbs ] ) ( when { do } 'you { last } { most } { recently } [ visit come ] { to } *~1 ^0 ) ( when be 'you { last } { most } { recently } { at } *~1 ^0 ) ( do 'you { ever } [ visit come ] { to } { at } *~1 ^0 ) ( 'you { ever } make { ~any } visit { to } { at } *~1 ^0 ) ( [ visit come ] { to } *~1 ^0 *~1 when 'you { be } [ alive living live ] ) ( be you { ever } { at } { in } *~1 ^0 ) ] `
^placebeautiful p 0 0 B( ^place ) [ ( !not !for !important ^0 be *~2 [ ~pretty ~good_appearance smashing cool peaceful ~goodness ] ) ( !not !for !important be *~1 ^0 *~2 [ ~pretty ~good_appearance smashing cool peaceful ~goodness ] ) ( !not !for !important be *~2 [ ~pretty ~good_appearance smashing cool peaceful ~goodness ] *~1 ^0 ) ( ^0 *~1 not *~2 [ ~bad_appearance ~feeling_badness_hi ] ) ( not *~1 ^0 *~2 [ ~bad_appearance ~feeling_badness_hi ] ) ( !not !for !important < { this } [ place location area region ] be *~2 [ ~pretty ~good_appearance smashing cool peaceful ~goodness ] ) ( < { this } [ place location area region ] be not *~2 [ ~bad_appearance ~feeling_badness_hi ] ) ( !not !for !important < ^0 be { a } *~2 [ ~good_appearance smashing cool peaceful ~goodness ] [ place location area region ] ) ( !for !important < what { a } [ ~good_appearance smashing cool peaceful ~goodness ] *~1 ^0 ) ( !for !important < [ ~pretty ~good_appearance smashing cool peaceful ~goodness ] *~1 ^0 { here } > ) ( !not I { do } ~to_like { it } { be } { at } *~1 ^0 ) ] `
^placeugly p 0 0 B( ^place ) [ ( !not ^0 be *~2 [ ~bad_appearance ~feeling_badness_hi ~scary ] ) ( !not be *~1 ^0 *~2 [ ~bad_appearance ~feeling_badness_hi ~scary ] ) ( !not be *~2 [ ~bad_appearance ~feeling_badness_hi ~scary ] *~1 ^0 ) ( ^0 *~1 not *~2 [ ~pretty ~good_appearance cool ] ) ( not *~1 ^0 *~2 [ ~pretty ~good_appearance ] ) ( not *~2 [ ~pretty ~good_appearance ] *~1 ^0 ) ( !not < { this } [ place location area region ] be *~2 [ ~bad_appearance ~feeling_badness_hi ~scary ] ) ( < { this } [ place location area region ] be not *~2 [ ~pretty ~good_appearance ] ) ( ^0 be { a } *~2 [ ~bad_appearance ~feeling_badness_hi ~scary ] [ place location area region ] ) ( < what { a } [ ~bad_appearance ~feeling_badness_hi ~scary ] *~1 ^0 ) ( < [ ~bad_appearance ~feeling_badness_hi ~scary ] *~1 ^0 { here } > ) ( I do not ~to_like { it } { be } { at } *~1 ^0 ) ] `
^whathistory p 0 0 B( ^place ) [ ( what be { the } *~1 history [ of for ] *~1 ^0 ) ( history [ of for ] *~1 ^0 *~1 be what ) ( tell { to } me * history [ of for ] *~1 ^0 ) ( ~explain *~3 history [ of for ] *~1 ^0 ) ( what [ happen go_on ] { at } { in } *~1 ^0 ) ( what * [ significance significant special ] [ of about ] *~1 ^0 ) ( ^0 has what * [ significance significant ] ) ( I [ ~to_want ] { to } know { more } about *~2 ^0 ) ( < [ does did ] ~anything { else } [ happen occur ] { here } { at } { in } *~1 ^0 ) ( how old be *~1 ^0 ) ( what *~2 age *~2 ^0 ) ( I *~1 [ not never ] see *~1 ^0 ) ( I *~1 [ not never ] [ been come visit ] to *~1 ^0 ) ] `
^whohere p 0 0 B( ^place ) [ ( who [ be live reside stay ] { in } { at } *~1 ^0 ) ( who 's home { be } { in } { at } *~1 ^0 ) ( [ does do ] *~1 [ live stay reside ] { in } { at } *~1 ^0 ) ( be *~1 [ living staying residing ] { in } { at } *~1 ^0 ) ( live { in } { at } *~1 ^0 { , } [ too with_you ] ) ] `
^whycome p 0 0 B( ^place ) [ ( ~why { do } { you } { we } [ come visit be take_me ] { in } { at } { to } *~1 ^0 ) ( ~why *~1 [ you we ] ~to_want * ^0 ) ( what *~3 reason *~1 [ you we ] *~1 [ come visit be take_me ] * ^0 ) ( what *~3 reason *~1 [ you we ] ~to_want * ^0 ) ( [ you we ] { have } [ come visit be take_me ] { in } { at } *~1 ^0 *~1 [ ~why because ] ) ( [ you we ] *~3 ^0 *~2 what reason ) ( ~why *~1 { you } { we } { ~to_want } { to } show I *~1 ^0 ) ( ~why *~1 { you } { we } { ~to_want } { to } show *~1 ^0 to me ) ( what *~3 reason *~1 { you } { we } { ~to_want } { to } show I *~1 ^0 ) ( what *~3 reason *~1 { you } { we } { ~to_want } { to } show *~1 ^0 to me ) ( what *~3 reason *~1 [ you we ] *~1 [ come visit be take_me ] * ^0 ) ( what { be } we doing { at } *~1 ^0 ) ( ~why *~1 { you } { ~to_want } { to } bring I *~2 ^0 ) ( ~why [ you we I ] [ are am ] *~1 ^0 ) ( ~why [ are am ] [ you we I ] *~1 ^0 ) ( be *~3 reason *~1 [ you we ] *~1 [ come visit be take_me ] * ^0 ) ( be *~1 ^0 { a } [ happy good great ] [ place location ] ) ( you *~1 ~think_verbs *~1 ^0 be { a } [ happy good great ] [ place location ] ) ( ~anything ~badness [ happen occur take_place ] { in } { at } *~1 ^0 ) ( what { thing } ~can [ you we I ] do { in } { at } *~1 ^0 ) ( what be *~1 { for } { I } { you } { we } to do { in } { at } *~1 ^0 ) ] `
^whocome p 0 0 B( ^place ) [ ( who { else } { has } [ come visit travel been seen ] { to } { at } *~1 ^0 ) ( [ does do ] *~1 [ ~anyone ~cast ] { else } [ come visit been see travel ] { to } { at } *~1 ^0 ) ( [ has have ] *~1 [ ~anyone ~cast ] { else } [ be see ] { to } { at } *~1 ^0 ) ( [ do has ] *~1 [ ~anyone ~cast ] { else } *~1 [ bring take ] you { to } *~1 ^0 ) ( be { to } { at } *~1 ^0 { together } with *~1 [ ~anyone ~cast ] ) ( you [ come visit travel ] { to } { at } *~1 ^0 { together } with *~1 [ ~anyone ~cast ] ) ( who { else } know [ of about ] *~1 ^0 ) ( who { else } know { of } { about } where *~1 ^0 be ) ( < be *~1 [ ~anyone ~cast ] { else } { here } { to } { at } *~1 ^0 ) ( ~which { other } person { have } [ come visit travel been seen ] { to } { at } *~1 ^0 ) ] `
^whois p 0 0 B( ^whos ) [ ( who be *~1 ^0 *~1 > ) ( ^0 be who *~1 > ) ( < *~3 who *~1 ^0 be *~1 > ) ] `
^whatlooklike p 0 0 B( ^whos ) [ ( [ what how ] [ does do ] *~1 ^0 ~seem like { to } { you } > ) ( ~explain *~1 ^0 's appearance ) ( [ ( be *~1 ^0 ) ( ^0 *~1 be ) ] *~2 [ ~pretty ~good_appearance smashing ] > ) ( [ remember recall know ] [ how what ] *~1 ^0 ~seem like ) ( [ remember recall know ] *~1 ^0 's appearance ) ( be *~1 ^0 as [ ~pretty ~good_appearance smashing ] as ) ] `
^whatname p 0 0 B( ^whos ) [ ( what be *~1 ^0 *~1 { first } { given } name ) ( ^0 *~1 { first } { given } { name } be what ) ( ^0 { first } { given } name be > ) ( ^0 has { a } { first } { given } name ) ( tell me *~1 ^0 *~1 { first } { given } name ) ( tell me * { first } { given } name * ^0 ) ( [ how what ] be *~1 ^0 called ) ( what do you call ^0 ) ( what { first } { given } name * ^0 * call ) ( who be *~1 ^0 > ) ( [ does do has ] *~1 ^0 [ have got ] { a } { first } { given } name ) ( ^0 be named what > ) ] `
^whatfullname p 0 0 B( ^whos ) [ ( what be *~1 ^0 *~1 { full } { last } [ name surname ] ) ( ^0 *~1 { full } { last } [ name surname ] be what ) ( ^0 { full } { last } [ name surname ] be > ) ( ^0 has { a } { full } { last } [ name surname ] ) ( tell me *~1 ^0 *~1 { full } { last } [ name surname ] ) ( tell me * { full } { last } [ name surname ] * ^0 ) ( what { full } { last } [ name surname ] * ^0 * call ) ( [ does do has ] *~1 ^0 [ have got ] { a } { full } { last } [ name surname ] ) ( be *~1 ^0 named ) ( ^0 be named ) ( be *~1 ^0 's name ) ( ^0 's name be ) ] `
^whathappenedto p 0 0 B( ^whos ) [ ( what [ *happen* occur ] [ to with ] *~1 ^0 ) ( [ something anything ] [ *happen* occur ] [ to with ] *~1 ^0 ) ( what be *~1 deal { with } *~1 ^0 ) ] `
^howold p 0 0 B( ^whos ) [ ( < how [ old young ] > ) ( how * [ old young ] * be * ^0 > ) ( ^0 be * how * [ old young ] ) ( ^0 be * what * age ) ( what age [ were was ] *~1 ^0 > ) ( << [ were been ] ^0 [ child kid ] >> ) ( ^0 's age be *~2 > ) ( what be { a } age of ^0 ) ( tell { I } ^0 's age ) ( be ^0 *~2 age > ) ( ^0 be *~2 age > ) ( ^0 * same age as ) ( how * [ old young ] was * ^0 when *~1 { be } ~to_murder *~1 > ) ( what age [ were was ] *~1 ^0 when *~1 { be } ~to_murder *~1 > ) ( how * [ old young ] was * ^0 when * ~being_dead ) ( what age [ were was ] *~1 ^0 when * ~being_dead ) ( how old did *~1 ^0 [ become ( grow * to ) ] ) ( [ know remember recall ] how old *~1 ^0 be ) ] `
^whatmajor p 0 0 B( ^whos ) [ ( [ what which ] * ^0 * [ major study ] ) ( ^0 * be * [ major study ] ) ( ^0 * [ major study ] *~1 [ be what ] ) ( be *~1 ^0 in ~schools ) ( ^0 be in ~schools ) ( [ be does do ] ^0 go to *~1 ~schools ) ( ^0 attend *~1 ~schools ) ( [ does do ] *~1 ^0 [ major study ] *~2 > ) ] `
^whatwork p 0 0 B( ^whos ) [ ( what be ^0 * ~work ) ( what [ does do ] *~1 ^0 do { for } { ~work } ) ( ^0 [ does do has ] what *~2 ~work ) ( what [ does do ] ^0 do > ) ( << where ^0 ~work >> ) ( < *~1 [ does do ] ^0 work *~2 > ) ( < *~2 ^0 have { a } ~work *~2 > ) ( what ~work *~2 ^0 [ do have ] ) ( what ~work *~2 ^0 ~to_want ) ( what [ does do ] *~1 ^0 ~to_want to [ become be ] ) ( what pdoes do *~1 ^0 ~to_want to do *~3 ~work ) ( be *~1 ^0 employed ) ( ^0 be employed ) ( ~which be ^0 * business ) ( tell { me } [ of about ] *~1 ^0 * [ ~work business ] ) ( ~which business [ does do have be ] *~1 ^0 ) ] `
^whathobby p 0 0 B( ^whos ) [ ( what be *~1 ^0 's hobby ) ( ^0 *~1 [ have got does do ] * hobby ) ( what * hobby * ^0 * [ have got do ] ) ( what [ does do ] *~1 ^0 ~to_like *~1 do ) ( ^0 *~1 ~to_like *~1 do what ) ( tell me *~2 [ of about ] *~1 ^0 's hobby ) ( describe *~2 ^0 's hobby ) ( ~which be *~1 ^0 { 's } interests ) ( ~which be *~1 ^0 { 's } interested in ) ( ^0 { 's } be interested in ~which ) ] `
^whomarried p 0 0 B( ^whos ) [ ( be *~1 ^0 *~1 [ marry remarry ] ) ( [ does do ] *~1 ^0 *~1 { get } [ marry remarry ] ) ( who [ does do ] *~1 ^0 *~1 [ marry remarry ] ) ( who be *~1 ^0 *~1 [ marry remarry ] to ) ( who [ marry remarry ] *~1 ^0 ) ( [ does do ] *~1 ^0 *~1 have * [ wife husband family ] ) ( < *~1 ^0 be [ married remarried ] ) ( who [ does do be ] *~1 ^0 *~1 wed ) ( ~explain *~3 ^0 { 's } [ marriage wife husband ] ) ] `
^isalive p 0 0 B( ^whos ) [ ( ^0 be { a } *~1 [ dead alive ~ghost ] ) ( be *~1 ^0 { a } *~1 [ dead alive ~ghost ] ) ( !how !when !where < *~1 did *~1 ^0 *~1 die !of ) ( ^0 *~1 pop { ~pronoun } clog ) ( be *~1 ^0 { a } *~1 living > ) ( ^0 be { a } *~1 living > ) ] `
^istranscended p 0 0 B( ^whos ) [ ( ^0 [ be have ] *~1 ~transcend ) ( [ be does do have ] *~1 ^0 *~1 ~transcend ) ( will *~1 ^0 *~1 ~transcend ) ] `
^howdie p 0 0 B( ^whos ) [ ( how [ does do ] * ^0 [ die pass~v ] ) ( how * ^0 * dead ) ( ~which * ^0 * [ die pass~v ] { away } [ of from ] *~1 > ) ( ^0 * die_of * what ) ( ^0 die * how ? ) ( how did ~pronoun * lose *~1 ^0 ) ( [ of about ] ^0 *~1 [ death passing ] ) ( ~why { did } *~1 ^0 die ) ( ^0 die { because } ~why > ) ( what killed { off } *~1 ^0 ) ( ~explain { of } { about } { a } [ death passing ] of *~1 ^0 ) ( ~explain *~1 ^0 's [ death passing ] ) ( ~explain { of } { about } how *~1 ^0 [ die pass~v ] ) ( ~which way { do } *~1 ^0 die ) ( you *~1 know [ how ~why ] *~1 ^0 die ) ( ^0 *~1 [ how ~why ] did *~1 ~pronoun [ die pass~v ] ) ( ^0 *~1 what killed ~pronoun { off } ) ( ^0 *~1 what killed { off } ~pronoun ) ] `
^whokilled p 0 0 B( ^whos ) [ ( who { did } ~to_murder { off } *~1 ^0 ) ( who be *~3 ~to_murder { off } *~1 ^0 ) ( ^0 be ~to_murder by who ) ( ^0 *~1 who ~to_murder { off } ~pronoun ) ( ^0 *~1 who ~to_murder ~pronoun ) ] `
^whendie p 0 0 B( ^whos ) [ ( when [ does do ] * ^0 [ die pass~v ] ) ( when * ^0 * dead ) ( ^0 die * when > ) ( when did ~pronoun * lose *~1 ^0 ) ( when [ did was ] * [ death passing ] * [ for of ] * ^0 ) ( when [ did was ] * ^0 * [ death passing ] ) ( ^0 { 's } [ death passing ] be when > ) ( you *~1 know when *~1 ^0 die ) ] `
^wheredie p 0 0 B( ^whos ) [ ( where [ does do ] * ^0 [ die pass~v ] ) ( where * ^0 * dead ) ( ^0 die * where > ) ( where did ~pronoun * lose *~1 ^0 ) ( where [ did was ] * [ death passing ] * [ for of ] * ^0 ) ( where [ did was ] * ^0 * [ death passing ] ) ( ^0 { 's } [ death passing ] be where > ) ( did *~1 ^0 die [ inside in at where ] ) ( you *~1 know where *~1 ^0 die ) ] `
^howrelationship p 0 0 B( ^whos ) [ ( how be your *relatio* *~2 ^0 ) ( [ ( be you ) ( you be ) ] *~2 [ close intimate good_term ] { to } { with } *~1 ^0 ) ( your *relatio* *~2 ^0 * [ ~goodness ~badness ] ) ( you *~2 [ have got ] *relatio* *~1 ^0 ) ( [ of about ] your *relatio* with *~1 ^0 ) ( 'you *~2 get along with * ^0 ) ( you and *~1 ^0 *~2 get along ) ( ^0 and [ 'you yourself ] *~2 get along ) ( do you know *~1 ^0 > ) ( ~which ~type of *relatio* * [ with to ] *~1 ^0 ) ( ^0 be your { best } ~her_friends ) ( [ does do ] *~1 ^0 [ ~to_like ~to_respect ] 'you ) ( how much *~1 ^0 [ ~to_like ~to_respect ] 'you ) ( how { do } *~1 ^0 treat you ) ( how many times *~1 you *~1 { to } [ meet see hang_out_with ] *~1 ^0 ) ( did 'you *~1 meet { with } *~1 ^0 ) ( have 'you *~1 meet { with } *~1 ^0 ) ( [ ~goodness ~badness ] *relatio* with *~1 ^0 ) ( !'s < you *~1 know *~1 ^0 *~2 { personally } > ) ( be *~1 ^0 { not } { a } { your } { ~goodness } ~her_friends ) ( ^0 be *~1 { a } { your } { ~goodness } ~her_friends ) ] `
^doyoulike p 0 0 B( ^whos ) [ ( 'you *~1 { do } *~1 [ ~to_like ~to_respect ] *~1 ^0 ) ( 'you *~1 { do } care [ about for ] * ^0 ) ( 'you *~1 { do } miss ^0 ) ] `
^doyouhate p 0 0 B( ^whos ) [ ( 'you *~1 { do } *~1 ~to_hate *~1 ^0 ) ( 'you *~1 { do } not care [ about for ] * ^0 ) ( 'you *~1 { do } not miss ^0 ) ] `
^isnice p 0 0 B( ^whos ) [ ( be *~1 ^0 *~2 { a } [ nice kind good sweet ] { to } { you } > ) ( be *~1 ^0 *~1 { a } [ good ~meaningless_praise_words ] [ person ~malename ~femalename ] { to } { you } > ) ( ^0 *~1 be *~2 { a } [ nice kind good sweet ] { to } { you } > ) ( ^0 *~1 be *~2 { a } [ good ~meaningless_praise_words ] [ person ~malename ~femalename ] { to } { you } > ) ( [ does do ] *~1 ^0 *~2 care for you > ) ( be * ^0 * caring towards you ) ( [ how was ] [ good nice sweet kind ] of *~1 ^0 ) ] `
^introducemeto p 0 0 B( ^whos ) ![ not never ] [ ( *introd* I to *~1 ^0 ) ( *introd* *~1 ^0 to I ) ( I ~to_want *~2 meet *~1 ^0 ) ( ~can I meet *~1 ^0 ) ] `
^isamedium p 0 0 B( ^whos ) [ ( be *~1 ^0 { a } { spirit } medium ) ( ^0 be *~1 { a } { spirit } medium ) ( ^0 *~1 ~can *~2 ~manifest ) ( ~can *~1 ^0 *~2 ~manifest ) ( [ does do ] *~1 ^0 have { any } { of } ~manifest ) ( < *~1 ^0 have ~manifest ) ] `
^whatreputation p 0 0 B( ^whos ) [ ( what *reput* [ does do ] *~1 ^0 ) ( what be *~1 ^0 's *reput* ) ( what [ does do ] { ~any } [ person community town *neighbor* ] *~1 [ think feel ] [ of about ] *~1 ^0 ) ( [ does do be ] *~1 [ person community town *neighbor* ] *~1 [ think feel ] *~1 ^0 ) ( [ does do ] *~1 ^0 [ have got ] *~1 *reput* ) ( be *~1 ^0 [ famous well-known popular ] ) ( ^0 be *~1 [ famous well-known popular ] ) ] `
^whyknowwho p 0 0 B( ^whos ) [ ( [ ~why how ] { do } you know { of } { about } *~1 ^0 ) ( [ ~why how ] { do } ^0 know { of } { about } *~1 you ) ( you know { of } { about } *~1 ^0 [ ~why how ] ) ( ^0 know { of } { about } *~1 you [ ~why how ] ) ( [ where how ] { do } you meet *~1 ^0 ) ( [ where how ] { does } { do } ^0 meet *~1 you ) ( you meet *~1 ^0 [ where how ] ) ( ^0 meet *~1 you [ where how ] ) ( who { be } { it } { who } *introd* you to *~1 ^0 ) ( who { be } { it } { who } *introd* ^0 to *~1 you ) ] `
^melknowwho p 0 0 B( ^whos ) [ ( think [ of about ] *~1 ^0 * ~mellen ) ( << ~mellen opinion ^0 >> ) ( ~mellen * [ how what ] be your *relatio* *~2 ^0 ) ( ~mellen * do you know *~1 ^0 > ) ( ~mellen * know { about } { of } [ who what ] *~1 ^0 *~1 > ) ( ~mellen * [ ( be you ) ( you be ) ] *~2 [ close intimate good_term 'friends ] *~2 ^0 ) ( ~mellen * [ have got ] *relatio* *~1 ^0 ) ( ~mellen * what * [ think feel say ] [ about of ] *~1 ^0 ) ( ~mellen * get along with * ^0 ) ( ~mellen * you [ ~to_like ~to_hate ] *~1 ^0 ) ( ~mellen * how well *~3 you know *~1 ^0 ) ] `
^whoknowwho p 0 0 C( ^whos1 ^whos2 ) [ ( ^0 know { about } { of } [ who what ] *~1 ^1 *~1 > ) ( [ does do ] *~1 ^0 know *~1 ^1 > ) ( [ how what ] be *~1 ^0 *~1 *relatio* *~2 ^1 ) ( [ ( be *~1 ^0 ) ( ^0 be ) ] *~2 [ close intimate good_term 'friends ] *~2 ^1 ) ( ^0 *~1 *relatio* *~2 ^1 * [ ~goodness ~badness ] ) ( ^0 *~2 [ have got ] *relatio* *~1 ^1 ) ( ^0 *~2 get along with * ^1 ) ( what * ^0 [ think feel say ] [ about of ] *~1 ^1 ) ( [ does do ] *~1 ^0 *~1 [ ~to_like ~to_hate ] *~1 ^1 ) ( how well *~3 ^0 know *~1 ^1 ) ( ^0 's opinion [ of about ] *~1 ^1 ) ( ^0 [ does do ] { not } [ ~to_like ~to_hate ] *~1 ^1 ) ( ^0 * [ about of ] *~1 ^1 ) ( ^0 know { about } { of } *~1 ^1 ) ( < { did } { had } { not } ^0 *~1 { ever } meet { up } { with } *~1 ^1 > ) ( < *~1 { did } *~1 ^0 *~1 get along with *~1 ^1 ) ( < *~1 did *~1 ^0 *~1 ~to_like *~1 ^1 > ) ] `
^wherefrom p 0 0 B( ^whos ) [ ( where be *~1 ^0 from > ) ( ^0 be from where > ) ( [ where what ] be *~1 ^0 's [ birthplace hometown ] ) ( ^0 's [ birthplace hometown ] be where > ) ( where be *~1 ^0 born ) ( ^0 be born where > ) ( where did *~1 ^0 live > ) ( be *~1 ^0 from [ ~there ~geographical_areas ] ) ( < *~1 ^0 be from [ ~there ~geographical_areas ] ) ] `
^whenfrom p 0 0 B( ^whos ) [ ( when [ be does do ] *~1 ^0 [ born live alive ] ) ( ^0 { be } [ born live alive ] when > ) ( how long did *~1 ^0 live ) ( ~which { time } [ period era ] *~2 ^0 [ live from ] ) ( ^0 *~1 [ live from ] ~which { time } [ period era ] ) ( be *~1 ^0 from ~time_reference ) ( < *~1 ^0 be from ~time_reference ) ] `
^haskids p 0 0 B( ^whos ) ![ brother sister sibling ] [ ( ^0 *~1 [ have got ] { ~any } *~1 ~family_children ) ( where be *~1 ^0 's *~1 ~family_children ) ( [ be of about ] *~1 ^0 's *~1 ~family_children ) ( ^0 [ with without ] *~1 ~family_children ) ( what *~1 ~family_children { does } { do } *~1 ^0 [ have got ] ) ( ~explain *~3 ^0 { 's } ~family_children ) ( [ do does ] *~1 ^0 [ have got ] *~1 ~family_children ) ] `
^hasfamily p 0 0 B( ^whos ) [ ( ^0 *~1 [ have got ] { ~any } [ ~family_members family ] ) ( where be *~1 ^0 's [ ~family_members family ] ) ( [ be of about ] *~1 ^0 's [ ~family_members family ] ) ( ^0 [ with without ] *~1 [ ~family_members family ] ) ( ~which [ ~family_members family ] { does } { do } *~1 ^0 [ have got ] ) ( ~explain *~3 ^0 { 's } [ ~family_members family ] ) ( who be *~1 ^0 { 's } [ ~family_members family ] ) ( [ do does ] *~1 ^0 *~1 [ have got ] { ~any } [ ~family_members family ] ) ] #! Did x hurt =5you? `
^hurtyou p 0 0 B( ^whos ) [ ( [ did has ] *~1 ^0 *~1 [ hurt harm abuse ] 'you ) ( ^0 { have } *~1 cause you [ hurt harm abuse ] ) ( you *~1 [ be get ] [ hurt harm abuse ] by *~1 ^0 ) ( be *~1 ^0 * [ abusive hurtful harmful ] *~1 'you ) ( [ do does has ] *~1 do ~anything to 'you ) ] `
^isguilty p 0 0 B( ^whos ) !not [ ( be *~1 ^0 [ guilty innocent ] *~2 > ) ( ^0 *~1 be [ guilty innocent ] *~2 > ) ( be *~1 ^0 { a } [ killer murderer ] ) ( ^0 *~1 be { a } [ killer murderer ] ) ( be { a } [ killer murderer ] *~1 ^0 > ) ( did *~1 ^0 do it > ) ( ^0 did it > ) ( ^0 *~1 be { a } *~1 who did it > ) ( be { a } *~1 who did it *~1 ^0 > ) ( did *~1 ^0 commit *~1 murder ) ( be *~2 ^0 who commit *~1 murder ) ( !himself !herself did *~1 ^0 ~to_murder *~3 > ) ( ^0 { do } ~to_murder ~cheree ) ( ^0 { be } the *~2 [ who that which ] *~2 [ murderer killer murder kill ] ) ( ^0 { does } { do } [ ~seem be ] [ suspicious sus ] ) ( ^0 [ could might ] { not } have [ murder kill ] ) ( [ could might ] *~1 ^0 have { not } [ murder kill ] ) ] `
^whatfriends p 0 0 B( ^whos ) [ ( who be *~1 ^0 's *~1 ~her_friends ) ( ^0 's *~1 ~her_friends be who ) ( ^0 [ have got ] { ~any } *~1 ~her_friends ) ( what *~1 { of } company * ^0 keep ) ( ^0 keep what *~1 { of } company ) ( who { does } { do } *~1 ^0 *~1 hang { out } with ) ( ^0 *~1 hang { out } with who ) ( how be *~1 who 's social ) ( who 's social { ~noun } be ) ( [ what which ] ~her_friends { does } { do } *~1 ^0 have ) ( ^0 have [ what which ] ~her_friends ) ] `
^whatpersonality p 0 0 B( ^whos ) [ ( [ what how ] be *~1 ^0 's [ *persona* *chara* ] ) ( ^0 's [ *persona* *chara* ] *~1 be *~1 [ what how ] ) ( ~explain *~1 { about } { of } ^0 's [ *persona* *chara* ] ) ( [ what how ] be { a } [ *persona* *chara* ] of *~1 ^0 ) ( [ *persona* *chara* ] of *~1 ^0 be *~1 [ what how ] ) ( ~explain *~1 { about } { of } { a } [ *persona* *chara* ] of *~1 ^0 ) ( ~which ~type { of } [ *persona* *chara* ] *~2 ^0 ) ( ^0 *~2 { have } [ what which ] ~type { of } [ *persona* *chara* ] ) ( what [ *persona* *chara* ] [ does do ] *~1 ^0 have ) ( what be * ^0 like ) ] `
^whenbirthday p 0 0 B( ^whos ) [ ( [ when what ] * be *~1 ^0 * [ birthday bday ] ) ( ^0 * [ birthday bday ] *~1 be * [ when what ] ) ( [ when ( ~which day ) ] be *~1 ^0 born ) ( ^0 be born [ when ( ~which day ) ] ) ] `
^howtall p 0 0 B( ^whos ) [ ( [ ( be *~1 ^0 ) ( who be ) ] *~1 [ tall short ] ) ( how [ tall short ] be *~1 ^0 ) ( what be *~1 ^0 's height ) ( ^0 's height be *~2 > ) ] `
^whatkarma p 0 0 B( ^whos ) [ ( ^0 's ~karma ) ( ~karma of *~1 ^0 ) ( ^0 *~1 ~verb *~1 ~karma ) ] `
^whatwant p 0 0 B( ^whos ) [ ( what [ does do ] *~1 ^0 ~to_want ) ( ^0 ~to_want what > ) ( [ does do ] ^0 want ~anything ) ] `
^dodrink p 0 0 B( ^whos ) [ ( !what [ does do ] *~1 ^0 * drink { alcohol } { beer } { wine } > ) ( ^0 *~1 have * ~alcoholic_beverage ) ( ^0 * ~to_like { to } { drink } ~alcoholic_beverage { ~frequency_adverbs } > ) ( [ does do ] *~1 ^0 *~1 { ~to_like } { to } drink { ~frequency_adverbs } > ) ] `
^dowith p 0 0 B( ^whos ) [ ( you and *~1 ^0 *~2 [ does do go together ] ) ( ^0 and you *~2 [ does do go together ] ) ( ~explain * you and *~1 ^0 ) ( ~explain * ^0 and you ) ( you [ does do go ] with *~1 ^0 ) ( you * together with *~1 ^0 ) ] `
^isdead p 0 0 B( ^whos ) [ ( !not ^0 be *~1 { a } *~1 [ dead ~ghost ] ) ( ^0 be *~1 not [ alive living ] ) ( ^0 *~1 passed [ on away ] ) ( ^0 *~2 deceased ) ( ^0 be [ no not ] *~1 with us ) ( ^0 be *~1 gone { now } > ) ( ^0 be *~2 buried ) ( < *~3 ^0 died *~4 > ) ] `
^myfavorite p 0 0 C( ^category ^thing ) ( ![ not never ] [ ( my [ favorite fave ] ^0 be ^1 > ) ( my [ favorite fave ] ^0 be { a } ^1 > ) ( my [ favorite fave ] { ~noun } to ^0 be ^1 > ) ( my [ favorite fave ] { ~noun } to ^0 be { a } ^1 > ) ( my *~1 [ ~to_like favorite fave ] *~1 ^0 { would } { must } { have to } be ^1 > ) ( < ^1 { would } { must } { have_to } be { ~adverb } I [ ~to_like favorite fave ] ^0 ) ( < ^1 { would } { must } { have_to } be { ~adverb } { a } ^0 * I [ ~to_like favorite fave ] ) ] ) `
^ilike p 0 0 B( ^thing ) [ ( ![ not never ] < I { do } { really } ~to_like { a } ^0 ) ( I { do } not *~1 ~to_hate { a } ^0 ) ( ~noun I { do } ~to_like { be } { a } ^0 ) ] `
^ihate p 0 0 B( ^thing ) [ ( ![ not never ] < I *~1 ~to_hate { a } ^0 ) ( I { do } not *~1 ~to_like { a } ^0 ) ( ~noun I { do } ~to_hate { be } { a } ^0 ) ( ~noun I do not ~to_like { be } { a } ^0 ) ] `
^testmylike p 0 0 B( ^category ) ( ![ not never ] [ ( [ ~which who ] * my [ favorite fave ] ^0 ) ( my *~1 [ ~to_like favorite fave ] *~1 ^0 { would } { must } { have to } be [ ~which who ] ) ( < { do } { you } [ know remember ] * my [ favorite fave ] ^0 ) ( [ ~which who ] * ^0 * I ~to_like ) ( < { do } { you } [ know remember ] * ^0 * I ~to_like ) ] ) `
^testmyhate p 0 0 B( ^category ) ( ![ not never ] [ ( [ ~which who ] * my least [ favorite fave ] ^0 ) ( ~which * ^0 * I do not ~to_like ) ( ~which * ^0 * do not I ~to_like ) ( ~which * ^0 * do I not ~to_like ) ( my *~1 least [ favorite fave ] *~1 ^0 { would } { must } { have to } be [ ~which who ] ) ( < { do } { you } [ know remember ] * my least [ favorite fave ] ^0 ) ( [ ~which who ] * ^0 * I ~to_hate ) ( < { do } { you } [ know remember ] * ^0 * I ~to_hate ) ( [ ~which who ] be my hated ^0 ) ( < { do } { you } [ know remember ] my hated ^0 ) ] ) `
^testquality p 0 0 B( ^category ) ( ![ not never ] [ ( < { do } { you } { know } { remember } ~which ^0 be I > ) ( I be ~which ^0 ) ( < { do } { you } { know } { remember } ~which ^0 { do } I have > ) ( I have ~which ^0 ) ( < { do } { you } { know } { remember } my ^0 > ) ( my ^0 be { ~which } > ) ( < { do } { you } { know } { remember } ~which be my ^0 ) ( ~which be my ^0 ) ] ) `
^oob o 0 0 B( ^value ) $$oob = ^join ( $$oob " " ^0 ) `
^oob_inworld o 0 0 A( ) $$oob = ^join ( $$oob " " iw ) 3 if truth=0, 4 if truth=1, 5 if truth=2, 6 if truth=3, 7 if truth=4 ( game complete ) `
^oob_who o 0 0 A( ) ^if 00i( $truth = 4 ) 00G{ $$oob = ^join ( $$oob " " w7 ) } 06c else 00i( $truth = 3 ) 00G{ $$oob = ^join ( $$oob " " w6 ) } 05m else 00i( $truth = 2 ) 00G{ $$oob = ^join ( $$oob " " w5 ) } 04w else 00i( $truth = 1 ) 00G{ $$oob = ^join ( $$oob " " w4 ) } 03G else 00u( $seenmellen and $truth ) 00G{ $$oob = ^join ( $$oob " " w3 ) } 02E else 00j( $seenmellen ) 00G{ $$oob = ^join ( $$oob " " w2 ) } 01N else 00j( $seencheree ) 00G{ $$oob = ^join ( $$oob " " w1 ) } 00W else ( 1 ) 00G { $$oob = ^join ( $$oob " " w0 ) } 004 `
^oob_tutorial o 0 0 A( ) $$oob = ^join ( $$oob " " t $$t_code ) `
^oob_mood o 0 0 A( ) $$oob = ^join ( $$oob " " m $mood ) `
^oob_halt o 0 0 A( ) $$oob = ^join ( $$oob " " h ) `
^oob_show_clues o 0 0 A( ) $$oob = ^join ( $$oob " " sc ) `
^oob_test_sys o 0 0 A( ) $$oob = ^join ( $$oob " " o $$test_sys ) `
^oob_clue o 0 0 A( $_clues ) $_clues = c ^if 00e( $clue0 ) 00K{ $_clues = ^join ( $_clues $clue0 ) } 00V else ( 1 ) 00F { $_clues = ^join ( $_clues 0 ) } 004 ^if 00e( $clue1 ) 00K{ $_clues = ^join ( $_clues $clue1 ) } 00V else ( 1 ) 00F { $_clues = ^join ( $_clues 0 ) } 004 ^if 00e( $clue2 ) 00K{ $_clues = ^join ( $_clues $clue2 ) } 00V else ( 1 ) 00F { $_clues = ^join ( $_clues 0 ) } 004 ^if 00e( $clue3 ) 00K{ $_clues = ^join ( $_clues $clue3 ) } 00V else ( 1 ) 00F { $_clues = ^join ( $_clues 0 ) } 004 ^if 00e( $clue4 ) 00K{ $_clues = ^join ( $_clues $clue4 ) } 00V else ( 1 ) 00F { $_clues = ^join ( $_clues 0 ) } 004 ^if 00e( $clue5 ) 00K{ $_clues = ^join ( $_clues $clue5 ) } 00V else ( 1 ) 00F { $_clues = ^join ( $_clues 0 ) } 004 ^if 00e( $clue6 ) 00K{ $_clues = ^join ( $_clues $clue6 ) } 00V else ( 1 ) 00F { $_clues = ^join ( $_clues 0 ) } 004 ^if 00e( $clue7 ) 00K{ $_clues = ^join ( $_clues $clue7 ) } 00V else ( 1 ) 00F { $_clues = ^join ( $_clues 0 ) } 004 ^if 00e( $clue8 ) 00K{ $_clues = ^join ( $_clues $clue8 ) } 00V else ( 1 ) 00F { $_clues = ^join ( $_clues 0 ) } 004 $$oob = ^join ( $$oob " " $_clues c ) `
^oob_r o 0 0 A( ) $$oob = ^join ( $$oob " " r $rom_pts - $rom_next - $rom_level r ) `
^oob_rup o 0 0 A( ) $$oob = ^join ( $$oob " " v $rom_level v ) `
^oob_loc o 0 0 A( ) $$oob = ^join ( $$oob " " l $await_loc ) `
^oob_sys o 0 0 A( ) $$oob = ^join ( $$oob " " y $$sys_code y ) `
^oob_devil o 0 0 A( ) ^if 00i( $devil = 2 ) 00G{ $$oob = ^join ( $$oob " " d2 ) } 01M else 00i( $devil = 1 ) 00G{ $$oob = ^join ( $$oob " " d1 ) } 00W else ( 1 ) 00G { $$oob = ^join ( $$oob " " d0 ) } 004 `
^oob_anim o 0 0 A( ) $$oob = ^join ( $$oob " " a $$a_code a ) `
^oob_all o 0 0 A( $_i $_known ) $$oob = ^join ( $$oob " " k ) $_i = 00 ^loop ( 56 ) 03N { ^if 00F( ^query ( direct_svo $_i known 2 ) ) 00n{ $_known = 2 } 01x else 00F( ^query ( direct_svo $_i known 1 ) ) 00n{ $_known = 1 } 00D else ( 1 ) 00n { $_known = 0 } 004 $$oob = ^join ( $$oob $_known ) $_i += 1 ^if 00g( $_i < 10 ) 00x{ $_i = ^join ( 0 $_i ) } 004 } $$oob = ^join ( $$oob k ) `
^oob_new_loc o 0 0 A( ) $$oob = ^join ( $$oob " " n $$new_loc n ) `
^oob_update_loc o 0 0 A( ) $$oob = ^join ( $$oob " " u $$update_loc u ) `
^user o 0 0 A( ) ^if 00i( %rand < 40 ) 00t{ ^return ( $user ) } 004 ^if 00q( $user == $user_alt ) 00t{ ^return ( $user ) } 004 ^return ( ^join ( AUTOSPACE my $user_alt ) ) `
^usercap o 0 0 A( ) ^if 00i( %rand < 40 ) 00t{ ^return ( $user ) } 004 ^if 00q( $user == $user_alt ) 00t{ ^return ( $user ) } 004 ^return ( ^join ( AUTOSPACE My $user_alt ) ) `
^ispending o 0 0 B( ^cur ) $$_gambit_topic_pending = null ^pendingtopics ( @0 ) ^loop ( -1 ) 01B { $$tmp = ^last ( @0subject ) ^if 00j( ^0 == $$tmp ) 00R{ $$_gambit_topic_pending = 1 ^end ( LOOP ) } 004 } `
^no_clues_here o 0 0 B( ^locnum ) $cooldown -= 5 ^if 00l( $cooldown < 0 ) 00p{ $cooldown = 0 } 004 @1 = ^query ( direct_svo ^0 known 1 ) ^delete ( @1 ) ^createfact ( ^0 known 2 ) $$update_loc = ^0 [ I have the feeling, ^user ( ) , that there are no clues to be found in this location. ] [ We can stay here as long as you like, but I think there are no clues to be found in this location. ] [ ^usercap ( ) , there may not be any clues to be found here, but we can stay as long as you like. ] [ Hmm, I don't know if we're going to find any clues in this location. ] [ I kind of suspect there are no clues around here, but we can stay at this location as long as you like. ] [ I suppose we're not going to find more clues here. ] `
^getclue2 o 0 0 A( ) $$new_clue = 1 $clue2 = 1 `
^letsgo p 0 0 A( ) [ ( show { it } { to } me *~1 > ) ( let us go ) ( < go { now } > ) ( where { be } { it } > ) ( < *~1 why not > ) ( it would { be } { a } { good } { time } > ) ( not mind { go } { to } { see } { it } { there } > ) ( we [ shall ~can ] { go } { see } { it } { there } > ) ( you ~can { show } { me } { it } { there } { that } { something } > ) ( I { do } ~to_want to { go } { see } { it } { that } { something } { there } { with } { you } > ) ( ~yesanswer *~3 go { there } { now } > ) ( let us do *~1 > ) ( !not I be ready *~1 { go } { now } > ) ( I would { ~to_like } { to } { go } { see } { it } { there } { that } { something } > ) ( I would ~to_like { to } see *~2 { will } { take } { show } { me } { that } { something } > ) ( !not take me { there } { now } > ) ( sounds ~goodness ) ( I would ~to_like { to } { do } { that } { something } > ) ( ~yesanswer *~1 please ) ] `
^notgo o 0 0 A( ) [ No problem. We can go when you're ready. ] [ Sure. We can go another time. You can tell me when. ] [ Oh, then we don't have to go now. Tell me when you feel like going there. ] [ I'll Manifest it to you another time then. ] [ All right then. We don't have to go until you're ready. ] `
^dogo o 0 0 A( ) [ Great. Let's go. ] [ Hunky-dory. I'm going there now. ] [ Let's go! I'll Manifest it to you. ] [ I'll Manifest it to you as soon as I get there. ] [ Just let me Astravel there. ] [ Okay! Here we go. ] [ Great, I'm on my way. ] [ I'm going now. Give me a moment. ] [ Good, just give me a minute to get there. ] [ I'll Astravel to the place now. ] [ Okay, let me see how to get there.... ] [ All right then, I'm going. ] `
^neither o 0 0 A( ) [ We don't have to go to either now. Just tell me when you'd like to. ] [ We can visit these locations whenever you're ready. Just tell me. ] `
^explainplace o 0 0 A( ) [ It would be easiest if I simply show it to you, but we can go whenever you're ready. ] [ I think you should see it for yourself, but that can be another time. ] [ Why don't I simply show you? It's up to you though. We can go some other time. ] `
^gotit o 0 0 A( ) [ Got it. ] [ Fine. ] [ Right then. ] [ Understood. ] [ Sure. ] [ Okay. ] [ I'll try to remember that. ] [ I think I can remember it. ] [ You could be right. ] `
^convert_subj o 0 0 B( ^subj $_1 $_2 $_3 $_4 ) $_1 = ^substitute ( word ^0 my y&our ) $_2 = ^substitute ( word $_1 your m&y ) $_3 = ^substitute ( word $_2 I y&ou ) $_4 = ^substitute ( word $_3 you I ) ^substitute ( character $_4 & "" ) `
^convert_verb o 0 0 C( ^subj ^verb $_1 ) $_1 = ^join ( AUTOSPACE ^0 ^substitute ( word ^1 am are ) ) ^substitute ( word $_1 "you are" "I am" ) `
^convert_obj o 0 0 B( ^obj $_1 $_2 $_3 $_4 ) $_1 = ^substitute ( word ^0 my y&our ) $_2 = ^substitute ( word $_1 your m&y ) $_3 = ^substitute ( word $_2 me y&ou ) $_4 = ^substitute ( word $_3 you me ) ^substitute ( character $_4 & "" ) `
^convert_pronouns o 0 0 D( ^subj ^verb ^obj $_1 $_subj $_3 ) $_1 = ^substitute ( character ^0 " 's" "'s" ) $_subj = ^convert_subj ( $_1 ) ^convert_verb ( $_subj ^1 ) $_3 = ^substitute ( character ^2 " 's" "'s" ) ^convert_obj ( $_3 ) `
^fact_taught o 0 0 D( ^subj ^verb ^obj ) ^convert_pronouns ( ^0 ^1 ^2 ) . ^gotit ( ) `
^youtaughtme o 0 0 A( ) [ Didn't you tell me that? ] [ You told me. ] [ I remember that you said that. ] [ That's what you said before. ] [ Isn't that what you said before? ] [ At least I think you said so. ] [ Thought you said so. ] `
^output_equal o 0 0 D( ^subj ^verb ^obj $_1 $_2 $_4 ) $_1 = ^substitute ( character ^0 my your ) $_2 = ^substitute ( character $_1 I you ) ^substitute ( character $_2 " 's" "'s" ) ^substitute ( word ^1 am are ) $_4 = ^substitute ( character ^2 my your ) ^substitute ( character $_4 I you ) . ^youtaughtme ( ) `
^cancan o 0 0 A( ) [ Heh. Yes. ] [ Of course. ] [ The answer is yes. ] [ Yes, I'm sure of it. ] [ Absolutely. ] `
^nocan o 0 0 A( ) [ Um, I'm not sure. Maybe not? ] [ Maybe not. ] [ I don't think so? ] [ I'd guess not. ] [ I wouldn't bet on it. ] `
^didmath o 0 0 A( ) [ But I can only do basic math. ] [ Are you making me do your math homework? ] [ I know my arithmetic and things. ] `
^chatty_up o 0 0 A( ) $meter_chatty += 1 ^if 00q( $meter_chatty > 25 ) 00u{ $meter_chatty = 25 } 004 `
^chatty_down o 0 0 A( ) $meter_chatty -= 1 ^if 00r( $meter_chatty <- 25 ) 00v{ $meter_chatty = -25 } 004 `
^quizzical_up o 0 0 A( ) $meter_quizzical += 1 ^if 00t( $meter_quizzical > 15 ) 00x{ $meter_quizzical = 15 } 004 `
^quizzical_down o 0 0 A( ) $meter_quizzical -= 1 ^if 00u( $meter_quizzical <- 15 ) 00y{ $meter_quizzical = -15 } 004 `
^positivity_up o 0 0 A( ) $meter_positivity += 1 ^if 00u( $meter_positivity > 15 ) 00y{ $meter_positivity = 15 } 004 `
^positivity_down o 0 0 A( ) $meter_positivity -= 1 ^if 00v( $meter_positivity <- 15 ) 00z{ $meter_positivity = -15 } 004 `
^focus_up o 0 0 A( ) $meter_focus += 1 ^if 00p( $meter_focus > 15 ) 00t{ $meter_focus = 15 } 004 `
^focus_down o 0 0 A( ) $meter_focus -= 1 ^if 00q( $meter_focus <- 15 ) 00u{ $meter_focus = -15 } 004 `
^flirty_up o 0 0 A( ) $meter_flirty += 1 ^if 00q( $meter_flirty > 15 ) 00u{ $meter_flirty = 15 } 004 `
^flirty_down o 0 0 A( ) $meter_flirty -= 1 ^if 00r( $meter_flirty <- 15 ) 00v{ $meter_flirty = -15 } 004 `
^clearmood o 0 0 A( ) $meter_flirty = 0 $meter_chatty = 0 $meter_positivity = 0 $meter_focus = 0 $meter_quizzical = 0 $mood = 0 $mood_counter = 0 $$m = 1 ^if 00k( ! $tutorial6 ) 00D{ $tutorial6 = 1 $$t_code = 6 } 004 `
